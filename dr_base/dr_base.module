<?php
/**
 * @file
 * Donor Rally module. Allows teams/groups to "compete" in fundraising
 * campaigns.
 * See README.txt for more information.
 */
include_once('dr_base.features.inc');

/**
 * Team content type.
 */
define('DONOR_RALLY_CONTENT_PROFILE_TYPE', 'team');

/**
 * Implements hook_menu().
 */
function dr_base_menu() {
  $items = array();
  $items['admin/config/dr-base'] = array(
    'title' => 'Donor Rally',
    'description' => 'Global settings for Donor Rally',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dr_base_settings_form'),
    'access arguments' => array('administer donor rally'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'dr_base.admin.inc',
  );

  $items['admin/config/dr-base/global'] = array(
    'title' => 'Global settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function dr_base_permission() {
  return array(
    'administer donor rally' => array(
      'title' => t('administer donor rally'),
      'description' => t('Administer Donor Rally configuration.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function dr_base_theme($existing, $type, $theme, $path) {
  $base = array(
    'arguments' => array('vars' => array()),
  );
  // TODO make better arguments.
  return array(
    'dr_base_thermometer' => array(
      'template' => 'dr-base-thermometer',
      'arguments' => array('vars' => array()),
    ),
    'dr_base_welcome' => array(
      'template' => 'dr-base-welcome',
      'arguments' => array('video' => '', 'links' => array(), 'admin' => ''),
      'path' => drupal_get_path('module', 'dr_base') . '/theme',
    ),
  );
}

/**
 * Implements hook_init().
 */
function dr_base_init() {
  /* We need our css occasionally on pages without our blocks on 'em...so just include it always */
  drupal_add_css(drupal_get_path('module', 'dr_base') . '/dr-base.css');
}

/**
 * Implements hook_block_info().
 */
function dr_base_block_info () {
  $blocks['welcome'] = array(
    'info' => t('Donor Rally Welcome'),
    'cache' => DRUPAL_NO_CACHE,
  );
}

/**
 * Implements hook_block_view().
 */
function dr_base_block_view($delta = '') {
  module_load_include('inc', 'dr_base', 'dr_base.block');
  $function = '_dr_base_block_' . $delta;
  if (function_exists($function)) {
    return $function();
  }
}

/**
 * Preprocessor for theme('dr_base_welcome').
 */
function template_preprocess_dr_base_welcome(&$vars) {
  if (!empty($vars['links'])) {
    $vars['columns'] = array_chunk($vars['links'], ceil(count($vars['links']) / 2));
  }
}

/**
 * Preprocessor for theme('views_view').
 */
function dr_base_preprocess_views_view(&$vars) {
  $view = $vars['view'];
  if ($view->base_table == 'node' && strpos($view->current_display, 'page') !== FALSE && empty($view->result) && empty($vars['empty'])) {
    foreach ($view->filter as $handler) {
      if ($handler->table === 'node' && $handler->field === 'type' && !empty($handler->options['value'])) {
        foreach (array_filter($handler->options['value']) as $type) {
          $item = menu_get_item('node/add/' . strtr($type, array('_' => '-')));
          if ($item && $item['access']) {
            $output = t('Please <a href="!url">add your first @type</a> to get started.', array('@type' => node_type_get_name($type), '!url' => url('node/add/' . strtr($type, array('_' => '-')))));
          }
        }
        break;
      }
    }
    $vars['empty'] = !empty($output) ? $output : t('There is currently no content to view in this section.');
  }
}

/**
 * Preprocess thermometer vars for theming.
 */
function template_preprocess_dr_base_thermometer(&$variables) {
  $vars = $variables['vars'];
  unset($variables['vars']);
  if ($vars['total_raw_goal'] == 0.0) {
    return;
  }

  $total_height = 188; /* Fairly arbitrary */
  $top_margin = 0;
  $top_halfheight = $bottom_halfheight = 52 / 2;
  $font_halfheight = 9; /* half of "line-height" for the style goal/points style */

  $vars['complete'] = $vars['total_raw'] / $vars['total_raw_goal'];
  $vars['success'] = $vars['complete'] >= 1.0;

  $vars['filled_height'] = (int) ($total_height * min(1.0, $vars['complete']) + 0.5);
  $vars['empty_height'] = $total_height - $vars['filled_height'];

  if (!$vars['success']) {
    $vars['empty_top_top'] = $top_margin;
    $vars['empty_middle_top'] = $top_margin + $top_halfheight;
    $vars['empty_bottom_top'] = $vars['empty_middle_top'] + $vars['empty_height'];
  }

  $vars['filled_top_top'] = $top_margin /* + $top_halfheight - $top_halfheight */ + $vars['empty_height'];
  $vars['filled_middle_top'] = $vars['filled_top_top'] + $top_halfheight;
  $vars['filled_bottom_top'] = $vars['filled_middle_top'] + $vars['filled_height'];

  $vars['goal_top'] = $top_margin + $top_halfheight - $font_halfheight;
  $vars['points_top'] = max($vars['goal_top'] + $font_halfheight * 2, $vars['goal_top'] + $vars['empty_height']);
  $variables += $vars;
}

/**
 * Sitewide total/goal thermometer.
 */
function _dr_base_block_site_thermometer() {
  $goal = variable_get('dr_base_goal', 314159265);
  $total = _dr_base_get_total_points();
  $vars['total_raw_goal'] = $goal;
  $vars['total_raw'] = $total;
  $vars['total_raw_goal_view'] = _dr_base_format_value($goal);
  $vars['total_raw_view'] = _dr_base_format_value($total);

  $vars['edit_link'] = user_access('administer donor rally') ? l('Change campaign goal', 'admin/config/dr-base', array('query' => drupal_get_destination())) : '';
  return theme('dr_base_thermometer', array('vars' => $vars));
}
